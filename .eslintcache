[{"D:\\code\\personal-projects\\portfolio\\src\\index.js":"1","D:\\code\\personal-projects\\portfolio\\src\\App.js":"2","D:\\code\\personal-projects\\portfolio\\src\\reportWebVitals.js":"3","D:\\code\\personal-projects\\portfolio\\src\\pages\\Home\\index.js":"4","D:\\code\\personal-projects\\portfolio\\src\\components\\Hero\\index.js":"5","D:\\code\\personal-projects\\portfolio\\src\\components\\ProjectCard\\index.js":"6","D:\\code\\personal-projects\\portfolio\\src\\components\\Footer\\index.js":"7","D:\\code\\personal-projects\\portfolio\\src\\components\\Header\\index.js":"8","D:\\code\\personal-projects\\portfolio\\src\\components\\VerticalNav\\index.js":"9","D:\\code\\personal-projects\\portfolio\\src\\components\\SkillsSection\\index.js":"10","D:\\code\\personal-projects\\portfolio\\src\\components\\logos\\IllustratorLogo\\index.js":"11","D:\\code\\personal-projects\\portfolio\\src\\components\\logos\\PhotoshopLogo\\index.js":"12","D:\\code\\personal-projects\\portfolio\\src\\components\\logos\\JestLogo\\index.js":"13","D:\\code\\personal-projects\\portfolio\\src\\components\\logos\\SocketIOLogo\\index.js":"14","D:\\code\\personal-projects\\portfolio\\src\\components\\ContactSection\\index.js":"15"},{"size":533,"mtime":1610749420852,"results":"16","hashOfConfig":"17"},{"size":600,"mtime":1610754697008,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1610704686686,"results":"19","hashOfConfig":"17"},{"size":1449,"mtime":1610754713355,"results":"20","hashOfConfig":"17"},{"size":880,"mtime":1610749420719,"results":"21","hashOfConfig":"17"},{"size":4158,"mtime":1610749420722,"results":"22","hashOfConfig":"17"},{"size":2854,"mtime":1610759000760,"results":"23","hashOfConfig":"17"},{"size":3839,"mtime":1610749420682,"results":"24","hashOfConfig":"17"},{"size":1015,"mtime":1610749420806,"results":"25","hashOfConfig":"17"},{"size":5223,"mtime":1610749420787,"results":"26","hashOfConfig":"17"},{"size":1686,"mtime":1610749420807,"results":"27","hashOfConfig":"17"},{"size":2011,"mtime":1610749420849,"results":"28","hashOfConfig":"17"},{"size":1670,"mtime":1610749420848,"results":"29","hashOfConfig":"17"},{"size":945,"mtime":1610749420851,"results":"30","hashOfConfig":"17"},{"size":3895,"mtime":1610754151387,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1fhf5g5",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\code\\personal-projects\\portfolio\\src\\index.js",[],["66","67"],"D:\\code\\personal-projects\\portfolio\\src\\App.js",[],"D:\\code\\personal-projects\\portfolio\\src\\reportWebVitals.js",[],"D:\\code\\personal-projects\\portfolio\\src\\pages\\Home\\index.js",[],"D:\\code\\personal-projects\\portfolio\\src\\components\\Hero\\index.js",[],"D:\\code\\personal-projects\\portfolio\\src\\components\\ProjectCard\\index.js",["68","69","70"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport Measure from 'react-measure'\r\nimport './index.css'\r\n\r\nexport default function ProjectCard(props) {\r\n    // create refs to elements in project card\r\n    const briefDiv = useRef()\r\n    const buttonsWrapper = useRef()\r\n    const projectHeading = useRef()\r\n\r\n    // ref to hold media query\r\n    const query = useRef()\r\n    const setQuery = data => {\r\n        // first remove any existing media query event listeners from the query\r\n        if (query.current) {\r\n            query.current.removeListener(queryListener)\r\n        }\r\n        // now update the query ref to new max-width media query\r\n        query.current = window.matchMedia(`(max-width: ${768 + data}px)`)\r\n\r\n        // add new event listener to query\r\n        query.current.addEventListener('change', queryListener)\r\n    }\r\n\r\n    // store scroll bar width in ref\r\n    const scrollWidthRef = useRef()\r\n    const setScrollWidth = data => {\r\n        scrollWidthRef.current = data\r\n\r\n        // update bottom css prop for project brief div\r\n        briefDiv.current.style.bottom = `clamp(0px, calc((269px - (1037px - (100vw - ${data}px))) / 269 * 150), 150px)`\r\n        \r\n        // update media query ref to use new scroll bar width\r\n        setQuery(data)\r\n    }\r\n\r\n    // on load, add resize event listener to window to check for scroll bar width change\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => {\r\n            const scrollBarWidth = window.innerWidth - document.body.clientWidth\r\n            // if the current scroll bar's width is different than what's in the useRef hook, update ref\r\n            if (scrollBarWidth !== scrollWidthRef.current) {\r\n                setScrollWidth(scrollBarWidth)\r\n            }\r\n        })\r\n\r\n        // set scrollWidth ref on initial load (window event listener won't fire on load)\r\n        setScrollWidth(window.innerWidth - document.body.clientWidth)\r\n\r\n        // because JS media query won't affect element right on page load, set initial styles of elements based on body width\r\n        if (document.body.clientWidth > 767) {\r\n            briefDiv.current.style.boxShadow = '0px 4px 16px black'\r\n        } else {\r\n            projectHeading.current.style.textAlign = 'center'\r\n            buttonsWrapper.current.style.justifyContent = 'flex-end'\r\n        }\r\n    }, [])\r\n\r\n    const queryListener = (e) => {\r\n        // based on media query matching or not, update styles for elements\r\n        if (e.matches) {\r\n            briefDiv.current.style.boxShadow = 'none'\r\n            buttonsWrapper.current.style.justifyContent = 'flex-end'\r\n            projectHeading.current.style.textAlign = 'center'\r\n        } else {\r\n            briefDiv.current.style.boxShadow = '0px 4px 16px black'\r\n            buttonsWrapper.current.style.justifyContent = 'flex-start'\r\n            projectHeading.current.style.textAlign = 'left'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={props.isLast ? 'project-container last-project' : 'project-container'}>\r\n            <div className='project-img-container'>\r\n                <img className='img-fluid project-img' src={props.projectInfo.image} alt={props.projectInfo.alt_text} onClick={() => window.location.href = props.projectInfo.site_url} />\r\n            </div>\r\n            <div className='project-brief-flex-wrapper'>\r\n                <div\r\n                    className={props.isLast ? 'project-brief-container last-project' : 'project-brief-container'}\r\n                    style={{ bottom: '150px' }}\r\n                    ref={briefDiv}\r\n                >\r\n                    <h3 ref={projectHeading} className='project-title white-text'>{props.projectInfo.name}</h3>\r\n                    <p className='project-desc gray-text'>{props.projectInfo.description}</p>\r\n                    <div className='project-btns' ref={buttonsWrapper}>\r\n                        <a className='project-btn-link' href={`/project/${props.projectInfo.projectIndex}`}><div className='project-btn red-bg white-text'>More Info</div></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\code\\personal-projects\\portfolio\\src\\components\\Footer\\index.js",["71","72"],"D:\\code\\personal-projects\\portfolio\\src\\components\\Header\\index.js",["73","74","75","76","77","78"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport { Router, Link } from 'react-router-dom'\r\nimport './index.css'\r\n\r\nexport default function Header() {\r\n    const [fromTop, setFromTop] = useState(window.scrollY)\r\n\r\n    const [showMobileMenu, setShowMobileMenuState] = useState(false)\r\n    const showMobileMenuRef = useRef(false)\r\n    const setShowMobileMenu = data => {\r\n        setShowMobileMenuState(data)\r\n        showMobileMenuRef.current = data\r\n    }\r\n\r\n    // on load, add scroll event listener to track pixels scrolled from top of page\r\n    useEffect(() => {\r\n        document.addEventListener('scroll', event => {\r\n            setFromTop(window.scrollY)\r\n        })\r\n\r\n        // if window changes size while mobile menu is showing, hide menu to remove hidden overflow of body\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth > 850 && showMobileMenuRef.current) {\r\n                setShowMobileMenu(false)\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    // when mobile menu state is set, toggle user being able to scroll the page\r\n    useEffect(() => {\r\n        if (showMobileMenu) {\r\n            document.body.style.overflow = 'hidden'\r\n        } else {\r\n            document.body.style.overflow = 'auto'\r\n        }\r\n    }, [showMobileMenu])\r\n\r\n    const handleMenuIconClick = () => {\r\n        // toggle mobile menu\r\n        setShowMobileMenu(!showMobileMenu)\r\n    }\r\n\r\n    const handleNavItemClick = sectionId => {\r\n        // hide the mobile menu\r\n        setShowMobileMenu(false)\r\n        // if screen width is greater than 850px, automatically send user to section on page\r\n        if (window.innerWidth > 850) {\r\n            window.location.href = '/' + sectionId\r\n        } else {\r\n            // else menu needs to be hidden first, then redirect to section\r\n            setTimeout(() => {\r\n                window.location.href= '/' + sectionId\r\n            }, 500)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* overlay covering site when movile nav is showing */}\r\n            <div onClick={handleMenuIconClick} className={showMobileMenu ? 'mobile-menu-page-overlay show-overlay': 'mobile-menu-page-overlay'}></div>\r\n            <header>\r\n                <div className={fromTop > 80 && !showMobileMenu ? 'header-bg header-active' : 'header-bg'}></div>\r\n                <div className='header-flex'>\r\n                    <div className={showMobileMenu ? 'header-logo-wrapper header-logo-hidden' : 'header-logo-wrapper'}>\r\n                        <a href='/' className='white-text header-logo'>Brand<span className='red-text'>o</span>n</a>\r\n                    </div>\r\n                    {/* based on whether or not mobile menu is showing, update nav class */}\r\n                    <nav className={showMobileMenu ? 'header-nav nav-show' : 'header-nav'}>\r\n                        <p className='mobile-nav-exit' onClick={handleMenuIconClick}>&times;</p>\r\n                        <a className='white-text nav-link' onClick={() => handleNavItemClick('#')}>Home</a><br />\r\n                        <a className='white-text nav-link' onClick={() => handleNavItemClick('#projects')}>Projects</a><br />\r\n                        <a className='white-text nav-link' onClick={() => handleNavItemClick('#skills')}>Skills</a><br />\r\n                        <a href='./assets/pdf/test-pdf.pdf' target='_blank' className='white-text nav-link'>Resume</a><br />\r\n                        <a className='white-text nav-link' onClick={() => handleNavItemClick('#contact')}>Contact</a><br />\r\n                    </nav>\r\n                    <div className='header-mobile-icon-wrapper'>\r\n                        <i class=\"fas fa-bars menu-icon\" onClick={handleMenuIconClick}></i>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n","D:\\code\\personal-projects\\portfolio\\src\\components\\VerticalNav\\index.js",["79","80","81"],"import React from 'react'\r\nimport './index.css'\r\n\r\nexport default function VerticalNav() {\r\n    return (\r\n        <div className='vertical-nav-bar'>\r\n            <div className='vertical-nav-flex'>\r\n                <div className='navbar-spacer gray-bg'></div>\r\n                <a href='https://www.linkedin.com/in/brandon-phillips-2554801a1/' target='_blank'>\r\n                    <i className=\"fab fa-linkedin-in nav-social-icon\"></i>\r\n                </a>\r\n                <a href='https://github.com/BrandonP321' target='_blank'>\r\n                    <i className=\"fab fa-github-alt nav-social-icon\"></i>\r\n                </a>\r\n                <a href='https://stackoverflow.com/users/13790075/brandonp321' target='_blank'>\r\n                    <i className=\"fab fa-stack-overflow nav-social-icon\"></i>\r\n                </a>\r\n                <div className='navbar-spacer gray-bg'></div>\r\n            </div>\r\n            <p className='nav-copyright gray-text'>&#169; Brandon 2020</p>\r\n        </div>\r\n    )\r\n}\r\n","D:\\code\\personal-projects\\portfolio\\src\\components\\SkillsSection\\index.js",[],"D:\\code\\personal-projects\\portfolio\\src\\components\\logos\\IllustratorLogo\\index.js",[],"D:\\code\\personal-projects\\portfolio\\src\\components\\logos\\PhotoshopLogo\\index.js",[],"D:\\code\\personal-projects\\portfolio\\src\\components\\logos\\JestLogo\\index.js",[],"D:\\code\\personal-projects\\portfolio\\src\\components\\logos\\SocketIOLogo\\index.js",[],"D:\\code\\personal-projects\\portfolio\\src\\components\\ContactSection\\index.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"90","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":57,"column":8,"nodeType":"93","endLine":57,"endColumn":10,"suggestions":"94"},{"ruleId":"86","severity":1,"message":"95","line":5,"column":21,"nodeType":"88","messageId":"89","endLine":5,"endColumn":31},{"ruleId":"96","severity":1,"message":"97","line":53,"column":46,"nodeType":"98","endLine":53,"endColumn":61},{"ruleId":"86","severity":1,"message":"99","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":16},{"ruleId":"86","severity":1,"message":"100","line":2,"column":18,"nodeType":"88","messageId":"89","endLine":2,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":70,"column":25,"nodeType":"103","endLine":70,"endColumn":100},{"ruleId":"101","severity":1,"message":"102","line":71,"column":25,"nodeType":"103","endLine":71,"endColumn":108},{"ruleId":"101","severity":1,"message":"102","line":72,"column":25,"nodeType":"103","endLine":72,"endColumn":106},{"ruleId":"101","severity":1,"message":"102","line":74,"column":25,"nodeType":"103","endLine":74,"endColumn":107},{"ruleId":"96","severity":1,"message":"97","line":9,"column":83,"nodeType":"98","endLine":9,"endColumn":98},{"ruleId":"96","severity":1,"message":"97","line":12,"column":58,"nodeType":"98","endLine":12,"endColumn":73},{"ruleId":"96","severity":1,"message":"97","line":15,"column":80,"nodeType":"98","endLine":15,"endColumn":95},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Measure' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setScrollWidth'. Either include it or remove the dependency array.","ArrayExpression",["106"],"'setSocials' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Router' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [setScrollWidth]",{"range":"109","text":"110"},[2360,2362],"[setScrollWidth]"]