[{"D:\\code\\personal-projects\\portfolio\\src\\index.js":"1","D:\\code\\personal-projects\\portfolio\\src\\App.js":"2","D:\\code\\personal-projects\\portfolio\\src\\reportWebVitals.js":"3","D:\\code\\personal-projects\\portfolio\\src\\pages\\Home\\index.js":"4","D:\\code\\personal-projects\\portfolio\\src\\components\\SkillBar\\index.js":"5","D:\\code\\personal-projects\\portfolio\\src\\components\\Hero\\index.js":"6","D:\\code\\personal-projects\\portfolio\\src\\components\\ProjectCard\\index.js":"7","D:\\code\\personal-projects\\portfolio\\src\\components\\Footer\\index.js":"8","D:\\code\\personal-projects\\portfolio\\src\\components\\Header\\index.js":"9"},{"size":503,"mtime":1606800148866,"results":"10","hashOfConfig":"11"},{"size":474,"mtime":1606898550929,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":3133,"mtime":1606900704030,"results":"14","hashOfConfig":"11"},{"size":984,"mtime":1606859068262,"results":"15","hashOfConfig":"11"},{"size":257,"mtime":1606817712023,"results":"16","hashOfConfig":"11"},{"size":901,"mtime":1606861576495,"results":"17","hashOfConfig":"11"},{"size":2765,"mtime":1606942102290,"results":"18","hashOfConfig":"11"},{"size":1666,"mtime":1606941083936,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1fhf5g5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\code\\personal-projects\\portfolio\\src\\index.js",[],["42","43"],"D:\\code\\personal-projects\\portfolio\\src\\App.js",["44"],"import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './pages/Home'\nimport Header from './components/Header'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Router>\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\code\\personal-projects\\portfolio\\src\\reportWebVitals.js",[],"D:\\code\\personal-projects\\portfolio\\src\\pages\\Home\\index.js",[],"D:\\code\\personal-projects\\portfolio\\src\\components\\SkillBar\\index.js",["45","46"],"import React, { useState, useEffect } from 'react'\r\nimport './index.css'\r\n\r\nexport default function SkillBar(props) {\r\n    const [percent, setPercent] = useState(0)\r\n\r\n    // when percent changes (and on load), increment percent for counting animation\r\n    useEffect(() => {\r\n        // if percent has not reached the specified percent, increment\r\n        if (percent != props.percent) {\r\n            setTimeout(() => {\r\n                const newPercent = percent + 1\r\n                setPercent(newPercent)\r\n            }, 1000 / props.percent)\r\n        }\r\n    }, [percent])\r\n\r\n    const styles = {\r\n        width: `${props.percent}%`\r\n    }\r\n\r\n    return (\r\n        <div className='skill'>\r\n            <p className='skill-text white-text'>{props.skill}<span className='skill-percent'>{percent}%</span></p>\r\n            <div className='skill-bar white-bg'>\r\n                <div className='skill-bar-fill red-bg' style={styles}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\code\\personal-projects\\portfolio\\src\\components\\Hero\\index.js",[],"D:\\code\\personal-projects\\portfolio\\src\\components\\ProjectCard\\index.js",["47","48","49"],"import React from 'react'\r\nimport './index.css'\r\n\r\nexport default function ProjectCard(props) {\r\n    // destructure project info from props \r\n    const { name, image, alt_text, site_url, github_repo_url, description } = props.projectInfo\r\n\r\n    return (\r\n        <div className='project-container'>\r\n            <div className='project-img-container'>\r\n                <img className='img-fluid project-img' src={image} alt={alt_text} />\r\n            </div>\r\n            <div className='project-brief-container'>\r\n                <h3 className='project-title white-text'>{name}</h3>\r\n                <p className='project-desc gray-text'>{description}</p>\r\n                <div className='project-btns'>\r\n                    <a className='project-btn-link' href='#'><div className='project-btn red-bg white-text'>Button</div></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\code\\personal-projects\\portfolio\\src\\components\\Footer\\index.js",["50","51"],"D:\\code\\personal-projects\\portfolio\\src\\components\\Header\\index.js",["52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":12},{"ruleId":"61","severity":1,"message":"62","line":10,"column":21,"nodeType":"63","messageId":"64","endLine":10,"endColumn":23},{"ruleId":"65","severity":1,"message":"66","line":16,"column":8,"nodeType":"67","endLine":16,"endColumn":17,"suggestions":"68"},{"ruleId":"57","severity":1,"message":"69","line":6,"column":36,"nodeType":"59","messageId":"60","endLine":6,"endColumn":44},{"ruleId":"57","severity":1,"message":"70","line":6,"column":46,"nodeType":"59","messageId":"60","endLine":6,"endColumn":61},{"ruleId":"71","severity":1,"message":"72","line":17,"column":21,"nodeType":"73","endLine":17,"endColumn":62},{"ruleId":"57","severity":1,"message":"74","line":5,"column":21,"nodeType":"59","messageId":"60","endLine":5,"endColumn":31},{"ruleId":"75","severity":1,"message":"76","line":52,"column":46,"nodeType":"77","endLine":52,"endColumn":61},{"ruleId":"71","severity":1,"message":"72","line":11,"column":21,"nodeType":"73","endLine":11,"endColumn":59},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.percent'. Either include it or remove the dependency array.","ArrayExpression",["80"],"'site_url' is assigned a value but never used.","'github_repo_url' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setSocials' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},"Update the dependencies array to be: [percent, props.percent]",{"range":"83","text":"84"},[565,574],"[percent, props.percent]"]